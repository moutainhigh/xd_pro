<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ChallengeRobot">
	<resultMap id="BaseResultMap" type="com.xiaodou.domain.product.ChallengeRobot">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="major_id" property="majorId" jdbcType="VARCHAR" />
		<result column="course_id" property="courseId" jdbcType="BIGINT" />
		<result column="target_ability" property="targetAbility"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="base_column">id, user_id, major_id, course_id, target_ability</sql>
	<select id="findEntityById" resultMap="BaseResultMap"
		parameterType="com.xiaodou.domain.product.ChallengeRobot">
		select
		<include refid="base_column" />
		from xd_challenge_robot where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="findEntityListByCond" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="dynamic_output" />
		from xd_challenge_robot
		<include refid="dynamic_where" />
		<include refid="dynamic_sort" />
		<include refid="dynamic_limit" />
	</select>
	<insert id="addEntity" parameterType="com.xiaodou.domain.product.ChallengeRobot"
		useGeneratedKeys="true" keyProperty="id">
		insert into xd_challenge_robot
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="userId != null">user_id,</if>
			<if test="majorId != null">major_id,</if>
			<if test="courseId != null">course_id,</if>
			<if test="targetAbility != null">target_ability,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id,jdbcType=BIGINT},</if>
			<if test="userId != null">#{userId,jdbcType=BIGINT},</if>
			<if test="majorId != null">#{majorId,jdbcType=VARCHAR},</if>
			<if test="courseId != null">#{courseId,jdbcType=BIGINT},</if>
			<if test="targetAbility != null">#{targetAbility,jdbcType=INTEGER},</if>
		</trim>
	</insert>
	<update id="updateEntityById" parameterType="com.xiaodou.domain.product.ChallengeRobot">
		update xd_challenge_robot
		<set>
			<if test="value != null and value.userId != null">user_id = #{value.userId,jdbcType=BIGINT},</if>
			<if test="value != null and value.majorId != null">major_id = #{value.majorId,jdbcType=VARCHAR},</if>
			<if test="value != null and value.courseId != null">course_id = #{value.courseId,jdbcType=BIGINT},</if>
			<if test="value != null and value.targetAbility != null">target_ability = #{value.targetAbility,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateEntity" parameterType="com.xiaodou.domain.product.ChallengeRobot">
		update xd_challenge_robot
		<set>
			<if test="value != null and value.userId != null">user_id = #{value.userId,jdbcType=BIGINT},</if>
			<if test="value != null and value.majorId != null">major_id = #{value.majorId,jdbcType=VARCHAR},</if>
			<if test="value != null and value.courseId != null">course_id = #{value.courseId,jdbcType=BIGINT},</if>
			<if test="value != null and value.targetAbility != null">target_ability = #{value.targetAbility,jdbcType=INTEGER},
			</if>
		</set>
		<include refid="dynamic_where" />
	</update>
	<update id="deleteEntityById" parameterType="com.xiaodou.domain.product.ChallengeRobot"> delete from
		xd_challenge_robot where id = #{id,jdbcType=BIGINT}
	</update>
	<delete id="deleteEntity" parameterType="java.util.Map">
		delete from xd_challenge_robot
		<include refid="dynamic_where" />
	</delete>
	<sql id="dynamic_output">
		<trim suffixOverrides=",">
			<if test="output != null and output.id != null">id,</if>
			<if test="output != null and output.userId != null">user_id,</if>
			<if test="output != null and output.majorId != null">major_id,</if>
			<if test="output != null and output.courseId != null">course_id,</if>
			<if test="output != null and output.targetAbility != null">target_ability,</if>
		</trim>
	</sql>
	<sql id="dynamic_where">
		<where>
			<if test="input != null and input.id != null">and id=#{input.id}</if>
			<if test="input != null and input.idList != null">
				and id in
				<foreach collection="input.idList" open="(" close=")"
					separator="," item="item">#{item}</foreach>
			</if>
			<if test="input != null and input.userId != null">and user_id=#{input.userId}</if>
			<if test="input != null and input.majorId != null">and major_id=#{input.majorId}</if>
			<if test="input != null and input.courseId != null">and course_id=#{input.courseId}</if>
			<if test="input != null and input.targetAbility != null">and target_ability=#{input.targetAbility}</if>
		</where>
	</sql>
	<sql id="dynamic_limit">
		<if
			test="limit != null and limit.limitStart != null and limit.limitCount != null"> limit \${limit.limitStart}, \${limit.limitCount}        </if>
	</sql>
	<sql id="dynamic_sort">
		<trim suffixOverrides=",">
			<if test="sort !=null"> order by            </if>
			<if
				test="sort != null and sort.id != null and ( sort.id == 'ASC' or sort.id == 'DESC' )">id ${sort.id},</if>
			<if
				test="sort != null and sort.userId != null and ( sort.userId == 'ASC' or sort.userId == 'DESC' )">user_id ${sort.userId},</if>
			<if
				test="sort != null and sort.majorId != null and ( sort.majorId == 'ASC' or sort.majorId == 'DESC' )">major_id ${sort.majorId},</if>
			<if
				test="sort != null and sort.courseId != null and ( sort.courseId == 'ASC' or sort.courseId == 'DESC' )">course_id ${sort.courseId},</if>
			<if
				test="sort != null and sort.targetAbility != null and ( sort.targetAbility == 'ASC' or sort.targetAbility == 'DESC' )">target_ability ${sort.targetAbility},</if>
		</trim>
	</sql>
</mapper>