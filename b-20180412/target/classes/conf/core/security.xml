<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!--springsecurity不拦截的地址-->
    <security:http pattern="/admin/login" security="none"/>
    <security:http pattern="/resources/**" security="none"/>
    <security:http pattern="/favicon.ico" security="none"/>
    <security:http pattern="/admin/dologin" security="none"/>
    <security:http pattern="/crontab/course_push" security="none"/>
    <security:http pattern="/vcr/getData" security="none"/>

    <!--安全核心配置-->
    <security:http use-expressions="true">
        <!--匿名用户配置-->
        <security:anonymous username="游客" granted-authority="ROLE_GUEST"/>
        <!--登陆配置-->
        <security:form-login
                password-parameter="password"
                username-parameter="user_name"
                default-target-url="/"
                authentication-failure-url="/admin/login?fail=true"
                always-use-default-target="true"
                login-page="/admin/login"/>

        <!--退出配置-->
        <security:logout
                logout-success-url="/admin/login"
                logout-url="/admin/loginOut"
                invalidate-session="true"
                delete-cookies="true"/>
        <!--session管理-->
        <security:session-management invalid-session-url="">
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
        </security:session-management>
        <!--过滤器链-->
        <security:custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <!--记住我-->
    </security:http>

    <!--验证类-->
    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="myUserDetailsService"/>
        <property name="passwordEncoder" ref="md5PasswordEncoder"/>
        <property name="saltSource" ref="reflectionSaltSource"/>
        <property name="hideUserNotFoundExceptions" value="false"/>
    </bean>

    <!--数据库配置-->
    <import resource="classpath:conf/core/database.xml"/>

    <!--DAO类-->
    <bean id="adminBaseDao" abstract="true">
        <property name="summerSqlSessionFactory" ref="adminSqlSessionFactory"/>
    </bean>
    <bean id="adminRoleDao" parent="adminBaseDao"
          class="com.xiaodou.ms.dao.admin.AdminRoleDao"/>
    <bean id="adminConfigDao" parent="adminBaseDao"
          class="com.xiaodou.ms.dao.admin.AdminConfigDao"/>
    <bean id="adminDao" parent="adminBaseDao"
          class="com.xiaodou.ms.dao.admin.AdminDao"/>
    <bean id="privilegeDao" parent="adminBaseDao"
          class="com.xiaodou.ms.dao.admin.PrivilegeDao"/>
    <bean id="roleDao" parent="adminBaseDao"
          class="com.xiaodou.ms.dao.admin.RoleDao"/>
    <bean id="rolePrivilegeDao" parent="adminBaseDao"
          class="com.xiaodou.ms.dao.admin.RolePrivilegeDao"/>
    <bean id="adminPrivilegeDao" parent="adminBaseDao"
          class="com.xiaodou.ms.dao.admin.AdminPrivilegeDao" />

    <!--service-->
    <bean id="adminConfigService" class="com.xiaodou.ms.service.admin.AdminConfigService">
        <property name="adminConfigDao" ref="adminConfigDao"/>
    </bean>
    <bean id="adminPrivilegeService" class="com.xiaodou.ms.service.admin.AdminPrivilegeService">
        <property name="privilegeDao" ref="privilegeDao"/>
        <property name="rolePrivilegeDao" ref="rolePrivilegeDao"/>
        <property name="adminRoleService" ref="adminRoleService"/>
        <property name="adminService" ref="adminService" />
        <property name="adminPrivilegeDao" ref="adminPrivilegeDao" />
    </bean>
    <bean id="adminRoleService" class="com.xiaodou.ms.service.admin.AdminRoleService">
        <property name="rolePrivilegeDao" ref="rolePrivilegeDao"/>
        <property name="adminRoleDao" ref="adminRoleDao"/>
        <property name="roleDao" ref="roleDao"/>
    </bean>
    <bean id="adminService" class="com.xiaodou.ms.service.admin.AdminService">
        <property name="adminRoleDao" ref="adminRoleDao"/>
        <property name="adminDao" ref="adminDao"/>
        <property name="adminRoleService" ref="adminRoleService"/>
    </bean>
    <bean id="myAccessDecisionManager"
          class="com.xiaodou.ms.service.admin.AdminAccessDecisionManager"/>

    <!--过滤器链-->
    <bean id="mySecurityFilter" class="com.xiaodou.ms.service.admin.AdminSecurityFilterInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="myAccessDecisionManager"/>
        <property name="mySecurityMetadataSource" ref="mySecurityMetadataSource"/>
    </bean>

    <!--权限元数据获得器-->
    <bean id="mySecurityMetadataSource"
          class="com.xiaodou.ms.service.admin.AdminSecurityMetadataSource">
        <constructor-arg name="adminPrivilegeService" ref="adminPrivilegeService"/>
    </bean>

    <!--权限验证机构-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="daoAuthenticationProvider">
        </security:authentication-provider>
    </security:authentication-manager>

    <!--用户信息获取-->
    <bean id="myUserDetailsService" class="com.xiaodou.ms.service.admin.AdminUserDetailsService">
        <property name="adminService" ref="adminService"/>
    </bean>

    <!--md5加密类-->
    <bean id="md5PasswordEncoder"
          class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <!--salt获取-->
    <bean id="reflectionSaltSource"
          class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="salt"/>
    </bean>

    <!--remeberMe service-->
    <bean id="ipTokenBasedRemeberMeServices"
          class="com.xiaodou.ms.service.admin.IpTokenBasedRememberMeServices">
        <property name="key" value="wangxiaoAdmin"></property>
        <property name="userDetailsService" ref="myUserDetailsService"></property>
        <property name="cookieName" value="REMEMBER_ME"/>
        <property name="parameter" value="remember_me"/>
    </bean>

</beans>
