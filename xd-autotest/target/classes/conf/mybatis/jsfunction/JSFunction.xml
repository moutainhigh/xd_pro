<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="JSFunction">
	<resultMap id="BaseResultMap"
		type="com.xiaodou.autotest.web.model.jsfunction.JSFunction">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="fun_signature" property="funSignature"
			jdbcType="VARCHAR" />
		<result column="function_body" property="functionBody"
			jdbcType="VARCHAR" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="base_column">id, fun_signature, function_body, uid, create_time,
		update_time</sql>
	<select id="findEntityById" resultMap="BaseResultMap"
		parameterType="com.xiaodou.autotest.web.model.jsfunction.JSFunction">
		select
		<include refid="base_column" />
		from xd_autotest_jsfuns where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="findEntityListByCond" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="dynamic_output" />
		from xd_autotest_jsfuns
		<include refid="dynamic_where" />
		<include refid="dynamic_sort" />
		<include refid="dynamic_limit" />
	</select>
	<insert id="addEntity"
		parameterType="com.xiaodou.autotest.web.model.jsfunction.JSFunction"
		useGeneratedKeys="true" keyProperty="id">
		insert into xd_autotest_jsfuns
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="funSignature != null">fun_signature,</if>
			<if test="functionBody != null">function_body,</if>
			<if test="uid != null">uid,</if>
			<if test="createTime != null">create_time,</if>
			<if test="updateTime != null">update_time,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id,jdbcType=BIGINT},</if>
			<if test="funSignature != null">#{funSignature,jdbcType=VARCHAR},</if>
			<if test="functionBody != null">#{functionBody,jdbcType=VARCHAR},</if>
			<if test="uid != null">#{uid,jdbcType=INTEGER},</if>
			<if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
			<if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
		</trim>
	</insert>
	<update id="updateEntityById"
		parameterType="com.xiaodou.autotest.web.model.jsfunction.JSFunction">
		update xd_autotest_jsfuns
		<set>
			<if test="value != null and value.funSignature != null">fun_signature = #{value.funSignature,jdbcType=VARCHAR},</if>
			<if test="value != null and value.functionBody != null">function_body = #{value.functionBody,jdbcType=VARCHAR},</if>
			<if test="value != null and value.uid != null">uid = #{value.uid,jdbcType=INTEGER},</if>
			<if test="value != null and value.createTime != null">create_time = #{value.createTime,jdbcType=TIMESTAMP},</if>
			<if test="value != null and value.updateTime != null">update_time = #{value.updateTime,jdbcType=TIMESTAMP},</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateEntity"
		parameterType="com.xiaodou.autotest.web.model.jsfunction.JSFunction">
		update xd_autotest_jsfuns
		<set>
			<if test="value != null and value.funSignature != null">fun_signature = #{value.funSignature,jdbcType=VARCHAR},</if>
			<if test="value != null and value.functionBody != null">function_body = #{value.functionBody,jdbcType=VARCHAR},</if>
			<if test="value != null and value.uid != null">uid = #{value.uid,jdbcType=INTEGER},</if>
			<if test="value != null and value.createTime != null">create_time = #{value.createTime,jdbcType=TIMESTAMP},</if>
			<if test="value != null and value.updateTime != null">update_time = #{value.updateTime,jdbcType=TIMESTAMP},</if>
		</set>
		<include refid="dynamic_where" />
	</update>
	<update id="deleteEntityById"
		parameterType="com.xiaodou.autotest.web.model.jsfunction.JSFunction"> delete from xd_autotest_jsfuns where id =
		#{id,jdbcType=BIGINT}
	</update>
	<delete id="deleteEntity" parameterType="java.util.Map">
		delete from xd_autotest_jsfuns
		<include refid="dynamic_where" />
	</delete>
	<sql id="dynamic_output">
		<trim suffixOverrides=",">
			<if test="output != null and output.id != null">id,</if>
			<if test="output != null and output.funSignature != null">fun_signature,</if>
			<if test="output != null and output.functionBody != null">function_body,</if>
			<if test="output != null and output.uid != null">uid,</if>
			<if test="output != null and output.createTime != null">create_time,</if>
			<if test="output != null and output.updateTime != null">update_time,</if>
		</trim>
	</sql>
	<sql id="dynamic_where">
		<where>
			<if test="input != null and input.idLower != null">and id &gt; #{input.idLower}</if>
			<if test="input != null and input.idUpper != null">and id &lt; #{input.idUpper}</if>
			<if test="input != null and input.idList != null">
				and id in
				<foreach collection="input.idList" open="(" close=")"
					separator="," item="item">#{item}</foreach>
			</if>
			<if test="input != null and input.funSignature != null">and fun_signature=#{input.funSignature}</if>
			<if test="input != null and input.functionBody != null">and function_body=#{input.functionBody}</if>
			<if test="input != null and input.uid != null">and uid=#{input.uid}</if>
			<if test="input != null and input.createTimeLower != null">and create_time &gt; #{input.createTimeLower}</if>
			<if test="input != null and input.createTimeUpper != null">and create_time &lt; #{input.createTimeUpper}</if>
			<if test="input != null and input.updateTimeLower != null">and update_time &gt; #{input.updateTimeLower}</if>
			<if test="input != null and input.updateTimeUpper != null">and update_time &lt; #{input.updateTimeUpper}</if>
		</where>
	</sql>
	<sql id="dynamic_limit">
		<if
			test="limit != null and limit.limitStart != null and limit.limitCount != null"> limit \${limit.limitStart}, \${limit.limitCount}        </if>
	</sql>
	<sql id="dynamic_sort">
		<trim suffixOverrides=",">
			<if test="sort !=null"> order by            </if>
			<if
				test="sort != null and sort.id != null and ( sort.id == 'ASC' or sort.id == 'DESC' )">id ${sort.id},</if>
			<if
				test="sort != null and sort.funSignature != null and ( sort.funSignature == 'ASC' or sort.funSignature == 'DESC' )">fun_signature ${sort.funSignature},</if>
			<if
				test="sort != null and sort.functionBody != null and ( sort.functionBody == 'ASC' or sort.functionBody == 'DESC' )">function_body ${sort.functionBody},</if>
			<if
				test="sort != null and sort.uid != null and ( sort.uid == 'ASC' or sort.uid == 'DESC' )">uid ${sort.uid},</if>
			<if
				test="sort != null and sort.createTime != null and ( sort.createTime == 'ASC' or sort.createTime == 'DESC' )">create_time ${sort.createTime},</if>
			<if
				test="sort != null and sort.updateTime != null and ( sort.updateTime == 'ASC' or sort.updateTime == 'DESC' )">update_time ${sort.updateTime},</if>
		</trim>
	</sql>
</mapper>