<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:oscache="http://www.springmodules.org/schema/oscache"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springmodules.org/schema/oscache http://www.springmodules.org/schema/cache/springmodules-oscache.xsd
           http://code.alibabatech.com/schema/dubbo
           http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:property-placeholder
		location="classpath:conf/custom/env/jdbc_mqcr.properties"
		ignore-unresolvable="true" />

	<bean id="mcrpDefaultDataSourceConfig"
		class="com.xiaodou.summer.source.jdbc.datasource.DataSourceConfig">
		<property name="urls" value="${jdbc_mqcr.urls}" />
		<!-- 连接数据的用户名 -->
		<property name="username" value="${jdbc_mqcr.username}" />
		<!-- 连接数据库的密码 -->
		<property name="password" value="${jdbc_mqcr.password}" />
		<!-- 合并多个DruidDataSource的监控数据 -->
		<property name="useGlobalDataSourceStat" value="${jdbc_mqcr.useGlobalDataSourceStat}" />
		<!-- DruidDataSource会定期把监控数据输出到日志中 -->
		<!-- <property name="timeBetweenLogStatsMillis" value="300000" /> -->
		<!-- 可能产生连接泄漏 -->
		<property name="removeAbandoned" value="${jdbc_mqcr.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->

		<!-- <property name="statLogger" ref="myStatLogger" /> -->

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc_mqcr.initialSize}" />
		<property name="minIdle" value="${jdbc_mqcr.minIdle}" />
		<property name="maxActive" value="${jdbc_mqcr.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc_mqcr.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc_mqcr.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc_mqcr.minEvictableIdleTimeMillis}" />

		<property name="testWhileIdle" value="${jdbc_mqcr.testWhileIdle}" />

		<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
		<property name="testOnBorrow" value="${jdbc_mqcr.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc_mqcr.testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${jdbc_mqcr.poolPreparedStatements}" />

		<property name="validationQuery" value="${jdbc_mqcr.validationQuery}" />

		<!-- <property name="filters" value="wall" /> -->
		<property name="filters" value="${jdbc_mqcr.filters}" />

		<property name="init" value="true" />
	</bean>

	<!--数据源 -->
	<bean id="mcrpDataSource"
		class="com.xiaodou.summer.source.jdbc.datasource.SummerDataSourceManager">
		<property name="defaultDataSourceConfig" ref="mcrpDefaultDataSourceConfig" />
	</bean>

	<!-- ======================================================== -->

	<!--mybatis与Spring整合 开始 -->
	<bean id="paginationInterceptor" class="com.xiaodou.summer.dao.pagination.PaginationInterceptor">
		<property name="dialect">
			<bean class="com.xiaodou.summer.dao.pagination.dialect.MySQLDialect" />
		</property>
		<property name="paginationSqlRegEx" value=".*ByCond"></property>
	</bean>

	<bean id="mcrpSqlSessionFactory" name="mcrpSqlSessionFactory"
		class="com.xiaodou.summer.source.jdbc.datasource.SummerSqlSessionFactory">
		<property name="configLocation" value="classpath:conf/core/mqcrSqlMapConfig.xml" />
		<property name="dataSourceManager" ref="mcrpDataSource" />
		<property name="plugins">
			<array>
				<ref bean="paginationInterceptor" />
				<bean
					class="com.xiaodou.summer.source.jdbc.plugin.DynamicDataSourceInterceptor" />
				<bean
					class="com.xiaodou.summer.source.jdbc.plugin.SqlStatementInterceptor" />
			</array>
		</property>
	</bean>


</beans>