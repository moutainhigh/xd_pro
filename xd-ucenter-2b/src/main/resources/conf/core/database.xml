<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!--数据源配置 -->
	<context:property-placeholder
		location="classpath:conf/custom/env/jdbc.properties"
		ignore-unresolvable="true" />

	<bean id="summerDefaultDataSourceConfig"
		class="com.xiaodou.summer.source.jdbc.datasource.DataSourceConfig">
		<property name="urls" value="${jdbc.urls}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="useGlobalDataSourceStat" value="${jdbc.useGlobalDataSourceStat}" />
		<!-- <property name="timeBetweenLogStatsMillis" value="300000" /> -->
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="filters" value="${jdbc.filters}" />
		<property name="init" value="true" />
	</bean>
	<!--数据源 -->
	<bean id="summerDataSource"
		class="com.xiaodou.summer.source.jdbc.datasource.SummerDataSourceManager">
		<property name="defaultDataSourceConfig" ref="summerDefaultDataSourceConfig" />
	</bean>

	<!--mybatis与Spring整合 开始 -->
	<bean id="paginationInterceptor" class="com.xiaodou.summer.dao.pagination.PaginationInterceptor">
		<property name="dialect">
			<bean class="com.xiaodou.summer.dao.pagination.dialect.MySQLDialect" />
		</property>
		<property name="paginationSqlRegEx" value=".*ByCond"></property>
	</bean>
	<bean id="summerSqlSessionFactory" name="summersqlSessionFactory"
		class="com.xiaodou.summer.source.jdbc.datasource.SummerSqlSessionFactory">
		<property name="configLocation" value="classpath:conf/core/sqlMapConfig.xml" />
		<property name="dataSourceManager" ref="summerDataSource" />
		<property name="plugins">
			<array>
				<ref bean="paginationInterceptor" />
				<bean
					class="com.xiaodou.summer.source.jdbc.plugin.SqlStatementInterceptor" />
			</array>
		</property>
	</bean>
	<!--mybatis与Spring整合 结束 -->


	<!-- 事务管理器配置,单数据源事务 -->
	<!-- 通过添加注解的方式完成事务控制 -->
	<bean id="ucenterTransactionManager"
		class="com.xiaodou.summer.source.jdbc.transaction.SummerDataSourceTransactionManager">
		<property name="dataSourceManager" ref="summerDataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="ucenterTransactionManager" />
	<tx:advice id="ucenterDefaultTxAdvice" transaction-manager="ucenterTransactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="SUPPORTS"
				rollback-for="java.lang.Exception" />
			<tx:method name="query*" propagation="SUPPORTS"
				rollback-for="java.lang.Exception" />
			<tx:method name="count*" propagation="SUPPORTS"
				rollback-for="java.lang.Exception" />
			<tx:method name="*" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="ucenterServicePoint"
			expression="execution(* com.xiaodou.userCenter.service.UcenterService.*(..))" />
		<aop:pointcut id="ucenterFacadeServicePoint"
			expression="execution(* com.xiaodou.userCenter.service.facade.*.*(..))" />
		<aop:advisor advice-ref="ucenterDefaultTxAdvice"
			pointcut-ref="ucenterServicePoint" />
		<aop:advisor advice-ref="ucenterDefaultTxAdvice"
			pointcut-ref="ucenterFacadeServicePoint" />
	</aop:config>
	<!-- 事务管理配置END -->

</beans>