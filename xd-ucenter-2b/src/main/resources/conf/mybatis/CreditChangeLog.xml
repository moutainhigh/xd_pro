<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CreditChangeLog">
	<resultMap id="BaseResultMap" type="com.xiaodou.userCenter.model.CreditChangeLog">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="custom_tag" property="customTag" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="operate_desc" property="operateDesc" jdbcType="VARCHAR" />
		<result column="count" property="count" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="base_column">id, custom_tag, user_id, operate_desc, count, create_time
	</sql>
	<select id="findEntityById" resultMap="BaseResultMap"
		parameterType="com.xiaodou.userCenter.model.CreditChangeLog">
		select
		<include refid="base_column" />
		from xd_user_credit_change_log where id = #{id,jdbcType=VARCHAR}
	</select>
	<select id="findEntityListByCond" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="dynamic_output" />
		from xd_user_credit_change_log
		<include refid="dynamic_where" />
		<include refid="dynamic_sort" />
		<include refid="dynamic_limit" />
	</select>
	<insert id="addEntity" parameterType="com.xiaodou.userCenter.model.CreditChangeLog">
		insert into xd_user_credit_change_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="customTag != null">custom_tag,</if>
			<if test="userId != null">user_id,</if>
			<if test="operateDesc != null">operate_desc,</if>
			<if test="count != null">count,</if>
			<if test="createTime != null">create_time,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id,jdbcType=VARCHAR},</if>
			<if test="customTag != null">#{customTag,jdbcType=VARCHAR},</if>
			<if test="userId != null">#{userId,jdbcType=VARCHAR},</if>
			<if test="operateDesc != null">#{operateDesc,jdbcType=VARCHAR},</if>
			<if test="count != null">#{count,jdbcType=VARCHAR},</if>
			<if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
		</trim>
	</insert>
	<update id="updateEntityById" parameterType="com.xiaodou.userCenter.model.CreditChangeLog">
		update xd_user_credit_change_log
		<set>
			<if test="value != null and value.customTag != null">custom_tag = #{value.customTag,jdbcType=VARCHAR},</if>
			<if test="value != null and value.userId != null">user_id = #{value.userId,jdbcType=VARCHAR},</if>
			<if test="value != null and value.operateDesc != null">operate_desc = #{value.operateDesc,jdbcType=VARCHAR},
			</if>
			<if test="value != null and value.count != null">count = #{value.count,jdbcType=VARCHAR},</if>
			<if test="value != null and value.createTime != null">create_time = #{value.createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateEntity" parameterType="com.xiaodou.userCenter.model.CreditChangeLog">
		update xd_user_credit_change_log
		<set>
			<if test="value != null and value.customTag != null">custom_tag = #{value.customTag,jdbcType=VARCHAR},</if>
			<if test="value != null and value.userId != null">user_id = #{value.userId,jdbcType=VARCHAR},</if>
			<if test="value != null and value.operateDesc != null">operate_desc = #{value.operateDesc,jdbcType=VARCHAR},
			</if>
			<if test="value != null and value.count != null">count = #{value.count,jdbcType=VARCHAR},</if>
			<if test="value != null and value.createTime != null">create_time = #{value.createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<include refid="dynamic_where" />
	</update>
	<update id="deleteEntityById" parameterType="com.xiaodou.userCenter.model.CreditChangeLog"> delete from
		xd_user_credit_change_log where id = #{id,jdbcType=VARCHAR}
	</update>
	<delete id="deleteEntity" parameterType="java.util.Map">
		delete from xd_user_credit_change_log
		<include refid="dynamic_where" />
	</delete>
	<sql id="dynamic_output">
		<trim suffixOverrides=",">
			<if test="output != null and output.id != null">id,</if>
			<if test="output != null and output.customTag != null">custom_tag,</if>
			<if test="output != null and output.userId != null">user_id,</if>
			<if test="output != null and output.operateDesc != null">operate_desc,</if>
			<if test="output != null and output.count != null">count,</if>
			<if test="output != null and output.createTime != null">create_time,</if>
		</trim>
	</sql>
	<sql id="dynamic_where">
		<where>
			<if test="input != null and input.id != null">and id=#{input.id}</if>
			<if test="input != null and input.idUpper != null">and id &lt; #{input.idUpper}</if>
			<if test="input != null and input.customTag != null">and custom_tag=#{input.customTag}</if>
			<if test="input != null and input.userId != null">and user_id=#{input.userId}</if>
			<if test="input != null and input.operateDesc != null">and operate_desc=#{input.operateDesc}</if>
			<if test="input != null and input.count != null">and count=#{input.count}</if>
			<if test="input != null and input.createTimeLower != null">and create_time &gt; #{input.createTimeLower}</if>
			<if test="input != null and input.createTimeUpper != null">and create_time &lt; #{input.createTimeUpper}</if>
		</where>
	</sql>
	<sql id="dynamic_limit">
		<if
			test="limit != null and limit.limitStart != null and limit.limitCount != null"> limit \${limit.limitStart}, \${limit.limitCount}        </if>
	</sql>
	<sql id="dynamic_sort">
		<trim suffixOverrides=",">
			<if test="sort !=null"> order by            </if>
			<if
				test="sort != null and sort.id != null and ( sort.id == 'ASC' or sort.id == 'DESC' )">id ${sort.id},</if>
			<if
				test="sort != null and sort.customTag != null and ( sort.customTag == 'ASC' or sort.customTag == 'DESC' )">custom_tag ${sort.customTag},</if>
			<if
				test="sort != null and sort.userId != null and ( sort.userId == 'ASC' or sort.userId == 'DESC' )">user_id ${sort.userId},</if>
			<if
				test="sort != null and sort.operateDesc != null and ( sort.operateDesc == 'ASC' or sort.operateDesc == 'DESC' )">operate_desc ${sort.operateDesc},</if>
			<if
				test="sort != null and sort.count != null and ( sort.count == 'ASC' or sort.count == 'DESC' )">count ${sort.count},</if>
			<if
				test="sort != null and sort.createTime != null and ( sort.createTime == 'ASC' or sort.createTime == 'DESC' )">create_time ${sort.createTime},</if>
		</trim>
	</sql>
</mapper>