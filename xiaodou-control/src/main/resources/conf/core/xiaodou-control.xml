<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:oscache="http://www.springmodules.org/schema/oscache"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springmodules.org/schema/oscache http://www.springmodules.org/schema/cache/springmodules-oscache.xsd
           http://code.alibabatech.com/schema/dubbo
       	   http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<description>Spring公共配置文件</description>
	<!-- MQ Check Repeat -->
	<import resource="classpath:conf/core/xiaodou-MQCR.xml" />
	<context:property-placeholder
		location="classpath:conf/custom/env/config.properties"
		ignore-unresolvable="true" />
	<context:property-placeholder
		location="classpath:conf/custom/env/baseop.properties"
		ignore-unresolvable="true" />
	<context:annotation-config />

	<context:component-scan base-package="com.xiaodou" />

	<mvc:annotation-driven />

	<bean class="com.xiaodou.summer.web.UTFStringHttpMessage" />
	<bean id="summerTaskExecutor"
		class="com.xiaodou.summer.sceduling.concurrent.SummerTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="100" />
		<property name="keepAliveSeconds" value="60" />
		<property name="queueCapacity" value="10000" />
	</bean>
	<bean id="applicationContext" class="com.xiaodou.summer.util.SpringWebContextHolder" />
	<bean class="com.xiaodou.thrift.server.TRPCServer" init-method="thriftStartServer">
		<property name="scanPath" value="com.xiaodou.control.service.thrift" />
		<property name="serverPort" value="12000" />
	</bean>
	
	<bean class="com.xiaodou.control.util.netty.SendServer" init-method="startup">
		<property name="_name" value="test" />
		<property name="_port" value="12001" />
	</bean>

	<bean id="SpringContextUtil" class="com.xiaodou.control.util.SpringContextUtil"
		scope="singleton" />
	<!--数据库配置 -->
	<import resource="classpath:conf/core/database.xml" />
	 <!-- 导入mongodb的配置文件 -->
    <import resource="classpath:conf/core/mongodb-context.xml"/>
	<import resource="classpath:conf/core/security.xml" />

	<!-- 引入AOP切面配置 -->
	<import resource="classpath:conf/core/inneraoppoint.xml" />
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="2000000" />
	</bean>

	<!-- 一定要放在viewResolver的前面，这样就先去找freemarker的 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>

	<!-- freemarker页面解析器 -->
	<bean id="viewResolver" class="com.xiaodou.summer.view.freemaker.ExtendFMViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="viewEncoding" value="UTF-8" />
		<property name="exposeSpringMacroHelpers">
			<value>true</value>
		</property>
		<property name="requestContextAttribute">
			<value>rc</value>
		</property>
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="baseOP" value="${view.resolver.baseOP}" />
		<property name="baseJsOP" value="${view.resolver.baseJsOP}" />
		<property name="baseCssOP" value="${view.resolver.baseCssOP}" />
		<property name="baseImgOP" value="${view.resolver.baseImgOP}" />
		<property name="dformat" value="${view.resolver.dformat}" />
	</bean>

	<!-- 对静态资源文件的访问 -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/images/**" location="/images/"
		cache-period="31556926" />
	<mvc:resources mapping="/js/**" location="/js/"
		cache-period="31556926" />
	<mvc:resources mapping="/css/**" location="/css/"
		cache-period="31556926" />

	<!--构造器方式注入 -->
<!--  	<bean id="ftpClientPool" class="com.xiaodou.control.util.ftp.FTPClientPool">
		<constructor-arg index="0"
			type="com.xiaodou.control.util.ftp.FTPClientFactory" ref="factory">
		</constructor-arg>
	</bean>
	<bean id="factory" class="com.xiaodou.control.util.ftp.FTPClientFactory">
	</bean> -->
</beans>